// Code generated by mockery v2.49.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// RedisRepository is an autogenerated mock type for the RedisRepository type
type RedisRepository struct {
	mock.Mock
}

// Find provides a mock function with given fields: key, model
func (_m *RedisRepository) Find(key string, model interface{}) error {
	ret := _m.Called(key, model)

	if len(ret) == 0 {
		panic("no return value specified for Find")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(key, model)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Save provides a mock function with given fields: key, value, ttlInSecond
func (_m *RedisRepository) Save(key string, value interface{}, ttlInSecond int) error {
	ret := _m.Called(key, value, ttlInSecond)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}, int) error); ok {
		r0 = rf(key, value, ttlInSecond)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRedisRepository creates a new instance of RedisRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRedisRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *RedisRepository {
	mock := &RedisRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
